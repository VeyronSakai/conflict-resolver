# Git Conflict Resolver Configuration for CI Tests
# This file is used for testing the conflict resolver action

rules:
  # === Test conflict files rules ===

  # JSON files - use incoming changes (theirs strategy)
  - paths: '__tests__/test-conflict-files/*.json'
    strategy: 'theirs'
    conflict_type: 'both-modified'

  # Markdown files - keep our version (ours strategy)
  - paths: '__tests__/test-conflict-files/*.md'
    strategy: 'ours'
    conflict_type: 'both-modified'

  # Config YAML files - will remain unresolved (no strategy specified)
  # Files without matching rules will require manual resolution

  # Binary files (both-modified) - use incoming changes (theirs strategy)
  - paths: '__tests__/test-conflict-files/test.png'
    strategy: 'theirs'
    conflict_type: 'both-modified'

  # === Rules for additional conflict types ===

  # DeletedByUs - file deleted on our side but modified on their side
  # Use theirs strategy to restore the file with their changes
  - paths: '__tests__/test-conflict-files/deleted-by-us.txt'
    strategy: 'theirs'
    conflict_type: 'deleted-by-us'

  # DeletedByThem - file modified on our side but deleted on their side
  # Use ours strategy to keep our modified file
  - paths: '__tests__/test-conflict-files/deleted-by-them.txt'
    strategy: 'ours'
    conflict_type: 'deleted-by-them'

  # BothAdded - same file added with different content on both sides
  # Use theirs strategy to take their version
  - paths: '__tests__/test-conflict-files/both-added.txt'
    strategy: 'theirs'
    conflict_type: 'both-added'

  # === Binary file rules for additional conflict types ===

  # Binary DeletedByUs - PNG deleted on our side but modified on their side
  # Use theirs strategy to restore the file with their changes
  - paths: '__tests__/test-conflict-files/deleted-by-us.png'
    strategy: 'theirs'
    conflict_type: 'deleted-by-us'

  # Binary DeletedByThem - PNG modified on our side but deleted on their side
  # Use ours strategy to keep our modified file
  - paths: '__tests__/test-conflict-files/deleted-by-them.png'
    strategy: 'ours'
    conflict_type: 'deleted-by-them'

  # Binary BothAdded - same PNG added with different content on both sides
  # Use theirs strategy to take their version
  - paths: '__tests__/test-conflict-files/both-added.png'
    strategy: 'theirs'
    conflict_type: 'both-added'

  # Text DeletedByBoth (rename/rename conflict)
  # When both branches rename the same file, Git creates a DD conflict for the original file
  # Use ours strategy to resolve the DD conflict (accept deletion from both sides)
  - paths: '__tests__/test-conflict-files/rename.txt'
    strategy: 'ours'
    conflict_type: 'deleted-by-both'

  # Note: Files without rules (undefined-rule.txt)
  # will remain unresolved with conflict markers

  # === Test for conflict_type mismatch ===
  # These rules should NOT match because conflict_type doesn't match actual conflict type

  # test.json is actually both-modified, but rule specifies deleted-by-us
  # This should NOT resolve the conflict
  - paths: '__tests__/test-conflict-files/test.json'
    strategy: 'ours'
    conflict_type: 'deleted-by-us'

  # undefined-rule.txt is actually both-modified, but rule specifies both-added
  # This should NOT resolve the conflict
  - paths: '__tests__/test-conflict-files/undefined-rule.txt'
    strategy: 'theirs'
    conflict_type: 'both-added'

  # === Test for rule priority ===
  # This rule should be ignored because an earlier rule already matches test.md
  # The earlier rule (line 13-15) with 'ours' strategy should take precedence
  - paths: '__tests__/test-conflict-files/*.md'
    strategy: 'theirs'
    conflict_type: 'both-modified'
